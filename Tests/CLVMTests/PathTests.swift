import XCTest

final class PathTests: XCTestCase {
    
    // brun -c '1' '1'
    // cost = 44
    // 1
    func test_path_1() throws {
        try verify_program(
            program: "01",
            args: "01",
            expected_output: "01",
            expected_cost: 44
        )
    }
    
    // brun -n -c '44' '(((0x1337 . (0x1337 . (42 . 0x1337))) . 0x1337) . 0x1337)'
    // cost = 64
    // 42
    func test_path_2() throws {
        try verify_program(
            program: "2c",
            args: "ffffff821337ff821337ff2a821337821337821337",
            expected_output: "2a",
            expected_cost: 64
        )
    }
    
    // brun -n -c '7708975405620101644641102810267383005' '(0x1337 . ((0x1337 . (0x1337 . (0x1337 . ((0x1337 . (0x1337 . (((0x1337 . ((0x1337 . (0x1337 . (0x1337 . (0x1337 . (0x1337 . ((0x1337 . (0x1337 . ((0x1337 . (((0x1337 . (0x1337 . (0x1337 . ((0x1337 . (((0x1337 . (((0x1337 . (0x1337 . (0x1337 . (0x1337 . ((0x1337 . ((0x1337 . (((((0x1337 . ((0x1337 . ((0x1337 . (0x1337 . (0x1337 . (((0x1337 . (0x1337 . ((0x1337 . (0x1337 . ((((0x1337 . (0x1337 . (0x1337 . (0x1337 . (((((0x1337 . (0x1337 . (0x1337 . (0x1337 . (0x1337 . (((((0x1337 . (((((0x1337 . ((0x1337 . (0x1337 . ((((0x1337 . ((((0x1337 . ((0x1337 . ((0x1337 . ((0x1337 . (0x1337 . (0x1337 . ((((0x1337 . (0x1337 . ((0x1337 . (((0x1337 . (0x1337 . (((0x1337 . (0x1337 . (0x1337 . (42 . 0x1337)))) . 0x1337) . 0x1337))) . 0x1337) . 0x1337)) . 0x1337))) . 0x1337) . 0x1337) . 0x1337)))) . 0x1337)) . 0x1337)) . 0x1337)) . 0x1337) . 0x1337) . 0x1337)) . 0x1337) . 0x1337) . 0x1337))) . 0x1337)) . 0x1337) . 0x1337) . 0x1337) . 0x1337)) . 0x1337) . 0x1337) . 0x1337) . 0x1337)))))) . 0x1337) . 0x1337) . 0x1337) . 0x1337))))) . 0x1337) . 0x1337) . 0x1337))) . 0x1337))) . 0x1337) . 0x1337)))) . 0x1337)) . 0x1337)) . 0x1337) . 0x1337) . 0x1337) . 0x1337)) . 0x1337)) . 0x1337))))) . 0x1337) . 0x1337)) . 0x1337) . 0x1337)) . 0x1337)))) . 0x1337) . 0x1337)) . 0x1337))) . 0x1337)))))) . 0x1337)) . 0x1337) . 0x1337))) . 0x1337)))) . 0x1337))'
    // cost = 532
    // 42
    func test_path_3() throws {
        try verify_program(
            program: "9005ccb1d511a10f878d9d42bc972df4dd",
            args: "ff821337ffff821337ff821337ff821337ffff821337ff821337ffffff821337ffff821337ff821337ff821337ff821337ff821337ffff821337ff821337ffff821337ffffff821337ff821337ff821337ffff821337ffffff821337ffffff821337ff821337ff821337ff821337ffff821337ffff821337ffffffffff821337ffff821337ffff821337ff821337ff821337ffffff821337ff821337ffff821337ff821337ffffffff821337ff821337ff821337ff821337ffffffffff821337ff821337ff821337ff821337ff821337ffffffffff821337ffffffffff821337ffff821337ff821337ffffffff821337ffffffff821337ffff821337ffff821337ffff821337ff821337ff821337ffffffff821337ff821337ffff821337ffffff821337ff821337ffffff821337ff821337ff821337ff2a821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337",
            expected_output: "2a",
            expected_cost: 532
        )
    }
    
    // brun -n -c '1' '(((0x1337 . (0x1337 . (42 . 0x1337))) . 0x1337) . 0x1337)'
    // cost = 44
    // (((4919 4919 42 . 4919) . 4919) . 4919)
    func test_path_4() throws {
        try verify_program(
            program: "01",
            args: "ffffff821337ff821337ff2a821337821337821337",
            expected_output: "ffffff821337ff821337ff2a821337821337821337",
            expected_cost: 44
        )
    }
    
    // brun -n -c '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001' '(((0x1337 . (0x1337 . (42 . 0x1337))) . 0x1337) . 0x1337)'
    // cost = 536
    // (((4919 4919 42 . 4919) . 4919) . 4919)
    func test_path_5() throws {
        try verify_program(
            program: "c07c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001",
            args: "ffffff821337ff821337ff2a821337821337821337",
            expected_output: "ffffff821337ff821337ff2a821337821337821337",
            expected_cost: 536
        )
    }
    
    // brun -n -c '56800' '((((((0x1337 . (0x1337 . (0x1337 . (0x1337 . ((0x1337 . (0x1337 . (0x1337 . ((0x1337 . 42) . 0x1337)))) . 0x1337))))) . 0x1337) . 0x1337) . 0x1337) . 0x1337) . 0x1337)'
    // cost = 108
    // 42
    func test_path_6() throws {
        try verify_program(
            program: "8300dde0",
            args: "ffffffffffff821337ff821337ff821337ff821337ffff821337ff821337ff821337ffff8213372a821337821337821337821337821337821337821337",
            expected_output: "2a",
            expected_cost: 108
        )
    }
    
    // brun -n -c '4012287723' '(0x1337 . (0x1337 . ((0x1337 . ((0x1337 . (0x1337 . (0x1337 . ((0x1337 . (0x1337 . (((0x1337 . ((0x1337 . ((0x1337 . (0x1337 . (((0x1337 . (((0x1337 . (0x1337 . (0x1337 . (0x1337 . ((0x1337 . (0x1337 . 42)) . 0x1337))))) . 0x1337) . 0x1337)) . 0x1337) . 0x1337))) . 0x1337)) . 0x1337)) . 0x1337) . 0x1337))) . 0x1337)))) . 0x1337)) . 0x1337)))'
    // cost = 172
    // 42
    func test_path_7() throws {
        try verify_program(
            program: "8500ef26a6eb",
            args: "ff821337ff821337ffff821337ffff821337ff821337ff821337ffff821337ff821337ffffff821337ffff821337ffff821337ff821337ffffff821337ffffff821337ff821337ff821337ff821337ffff821337ff8213372a821337821337821337821337821337821337821337821337821337821337821337821337",
            expected_output: "2a",
            expected_cost: 172
        )
    }
    
    // brun -n -c '0x0000C8C141AB3121E776' '((0x1337 . (0x1337 . ((0x1337 . (0x1337 . (0x1337 . ((0x1337 . (0x1337 . (0x1337 . (((0x1337 . (0x1337 . (0x1337 . (0x1337 . (((((0x1337 . (((0x1337 . ((((0x1337 . (0x1337 . (((0x1337 . (0x1337 . ((0x1337 . ((0x1337 . ((0x1337 . (0x1337 . ((((((0x1337 . ((0x1337 . ((((((0x1337 . (0x1337 . ((((0x1337 . (((0x1337 . 42) . 0x1337) . 0x1337)) . 0x1337) . 0x1337) . 0x1337))) . 0x1337) . 0x1337) . 0x1337) . 0x1337) . 0x1337)) . 0x1337)) . 0x1337) . 0x1337) . 0x1337) . 0x1337) . 0x1337))) . 0x1337)) . 0x1337)) . 0x1337))) . 0x1337) . 0x1337))) . 0x1337) . 0x1337) . 0x1337)) . 0x1337) . 0x1337)) . 0x1337) . 0x1337) . 0x1337) . 0x1337))))) . 0x1337) . 0x1337)))) . 0x1337)))) . 0x1337))) . 0x1337)'
    // cost = 304
    // 42
    func test_path_8() throws {
        try verify_program(
            program: "8a0000c8c141ab3121e776",
            args: "ffff821337ff821337ffff821337ff821337ff821337ffff821337ff821337ff821337ffffff821337ff821337ff821337ff821337ffffffffff821337ffffff821337ffffffff821337ff821337ffffff821337ff821337ffff821337ffff821337ffff821337ff821337ffffffffffff821337ffff821337ffffffffffff821337ff821337ffffffff821337ffffff8213372a821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337821337",
            expected_output: "2a",
            expected_cost: 304
        )
    }
    
    // brun -n -c '0x00D7' '(0x1337 . (0x1337 . (0x1337 . ((0x1337 . ((0x1337 . 42) . 0x1337)) . 0x1337))))'
    // cost = 76
    // 42
    func test_path_9() throws {
        try verify_program(
            program: "8200d7",
            args: "ff821337ff821337ff821337ffff821337ffff8213372a821337821337",
            expected_output: "2a",
            expected_cost: 76
        )
    }
    
    // brun -n -c '0xD7' '(0x1337 . (0x1337 . (0x1337 . ((0x1337 . ((0x1337 . 42) . 0x1337)) . 0x1337))))'
    // cost = 72
    // 42
    func test_path_10() throws {
        try verify_program(
            program: "81d7",
            args: "ff821337ff821337ff821337ffff821337ffff8213372a821337821337",
            expected_output: "2a",
            expected_cost: 72
        )
    }
    
    // brun -n -c '0x000000000000000000000000'
    // cost = 92
    // ()
    func test_path_11() throws {
        try verify_program(
            program: "8c000000000000000000000000",
            expected_output: "80",
            expected_cost: 92
        )
    }
    
}
