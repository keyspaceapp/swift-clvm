import XCTest

final class EqualTests: XCTestCase {
    
    // brun -n -c '(= (q . 10))'
    // FAIL: = takes exactly 2 arguments (10)
    func test_equal_1() throws {
        try verify_throwing_program(
            program: "ff09ffff010a80",
            expected_output: "= takes exactly 2 arguments"
        )
    }
    
    // brun -c '(= (q . 10) (q . 10))'
    // cost = 160
    // 1
    func test_equal_2() throws {
        try verify_program(
            program: "ff09ffff010affff010a80",
            expected_output: "01",
            expected_cost: 160
        )
    }
    
    // brun -c '(= (q . 10) 1)' '10'
    // cost = 184
    // 1
    func test_equal_3() throws {
        try verify_program(
            program: "ff09ffff010aff0180",
            args: "0a",
            expected_output: "01",
            expected_cost: 184
        )
    }
    
    // brun -c '(= (q . 0) (q . 0))'
    // cost = 158
    // 1
    func test_equal_4() throws {
        try verify_program(
            program: "ff09ffff0180ffff018080",
            expected_output: "01",
            expected_cost: 158
        )
    }
    
    // brun -c '(= (q . (0)) (q . 0))'
    // FAIL: = on list (())
    func test_equal_5() throws {
        try verify_throwing_program(
            program: "ff09ffff01ff8080ffff018080",
            expected_output: "= on list"
        )
    }
    
    // brun -c "(= (q . 2) (q . 3))"
    // cost = 160
    // ()
    func test_equal_6() throws {
        try verify_program(
            program: "ff09ffff0102ffff010380",
            expected_output: "80",
            expected_cost: 160
        )
    }
    
    // brun -c "(= 3 3)"
    // FAIL: path into atom ()
    func test_equal_7() throws {
        try verify_throwing_program(
            program: "ff09ff03ff0380",
            expected_output: "path into atom"
        )
    }
    
    // brun -c "(= (f 1) (+ (f (r 1)) (f (r (r 1)))))" "(7 3 4)"
    // cost = 1194
    // 1
    func test_equal_8() throws {
        try verify_program(
            program: "ff09ffff05ff0180ffff10ffff05ffff06ff018080ffff05ffff06ffff06ff018080808080",
            args: "ff07ff03ff0480",
            expected_output: "01",
            expected_cost: 1194
        )
    }
    
    // brun -c "(= (f 1) (+ (f (r 1)) (f (r (r 1)))))" "(7 3 3)"
    // cost = 1194
    // ()
    func test_equal_9() throws {
        try verify_program(
            program: "ff09ffff05ff0180ffff10ffff05ffff06ff018080ffff05ffff06ffff06ff018080808080",
            args: "ff07ff03ff0380",
            expected_output: "80",
            expected_cost: 1194
        )
    }
    
    // brun -c '(= (q . 0xq . 0x
    // cost = 848
    // 1
    func test_equal_10() throws {
        try verify_program(
            program: "ff09ffff01cffff01c
            expected_output: "01",
            expected_cost: 848
        )
    }
    
    // brun -c '(= (q . 0) (q . (0)))'
    // FAIL: = on list (())
    func test_equal_11() throws {
        try verify_throwing_program(
            program: "ff09ffff0180ffff01ff808080",
            expected_output: "= on list"
        )
    }

}
